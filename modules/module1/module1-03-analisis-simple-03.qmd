---
title: "Análisis Simple"
author: "Simon Goring, Socorro Dominguez Vidaña"
date: "`r Sys.Date()`"
format:
  html:
    fig_caption: true
    toc: true
    toc-float: false
    css: "text.css"
resources:
  - data/
  - images/
filters:
  - webr
webr: 
  autoload-packages: true
  preload: ["neotoma2", "rmarkdown", "dplyr"]
  repos: ["https://open.neotomadb.org/R-workshop/webr_repo"]
  install-quiet: true
---
```{webr-r}
#| label: taxa
#| include: false
#| echo: false
#| eval: true
#| cache: true
#| setup: true
#| results: hide
download.file("https://open.neotomadb.org/Current_Workshop/webr_repo/data/saDownload.RDS", destfile = "saDownload.RDS", mode = "wb")
suppressMessages({suppressWarnings({
  library(neotoma2)
  library(rioja)
  })})
```

```{webr-r}
#| label: retrieve downloads
#| message: false
library(neotoma2)
sa_dl <- readRDS('saDownload.RDS')
allSamp <- samples(sa_dl)
head(allSamp)
```

## Análisis Simples

### Trazado Estratigráfico

Podemos utilizar paquetes como `rioja` para hacer trazados estratigráficos para un único registro. Pero primero tenemos que hacer un manejo de datos diferente. A pesar de que podríamos hacer armonización nuevamente, vamos a tomar los 10 taxones más comúnes en un sitio dado los trazaremos en un diagrama estratigráfico.

Utilizaremos la función `arrange()` para ordenar confrome al número de veces que un taxón aparece en un núcleo. De esta forma, podemos tomar las muestras y seleccionar los taxones que aparecen en las diez primeras filas del marco de datos `plottingTaxa`.

```{webr-r}
#| label: stratiplot
#| message: false
#| results: asis
# Get a particular site, in this case we are simply subsetting the
# `sa_dl` object to get Lake Solsø:
plottingSite <- sa_dl[[1]]

counts <- plottingSite %>%
  samples() %>%
  toWide(ecologicalgroup = c("TRSH"),
         unit = c("NISP"),
         elementtypes = c("pollen"),
         groupby = "age",
         operation = "prop") 

counts <- counts[, colSums(counts > 0.01, na.rm = TRUE) > 5]
counts
```

Aparentemente, esto es una llamada compleja de comandos. Sin embargo, la función `toWide()` proporciona control sobre los taxones, unidades y otros elementos para que puedan ser ingresados en una matriz (`depth` x `taxon`) que muchas herramientas estadísticas como los paquetes `vegan` o `rioja` usan.

Para crear gráficas, podemos usar `strat.plot()` del paquete `rioja`, ordenar los taxones usando puntajes promedio ponderados (`wa.order`). También se ha agregado un gráfico CONISS al borde del gráfico, para mostrar cómo funciona el nuevo marco de datos amplio con funciones métricas de distancia.

```{webr-r}
#| label: plotStrigraph
#| message: false
#| warning: false
#| exercise: true
#| context: interactive
#| results: asis
clust <- rioja::chclust(dist(sqrt(counts)),
                        method = "coniss")

# Plot the stratigraphic plot, converting proportions to percentages:
plot <- rioja::strat.plot(counts[,-1] * 100, yvar = counts$age,
                  title = sa_dl[[1]]$sitename,
                  ylabel = "Calibrated Years BP",
                  xlabel = "Pollen (% of Trees and Shrubs)",
                  y.rev = TRUE,
                  clust = clust,
                  wa.order = "topleft",
                  scale.percent = TRUE)

rioja::addClustZone(plot, clust, 4, col = "red")
```

## Conclusion

Hemos hecho muchas cosas en este ejemplo. 
- Buscamos sitios utilizando nombres y parámetros geográficos. 
- Filtramos resultados utilizando parámetros espaciales y temporales. 
- Obtuvimos información de las muestras de los conjuntos de datos seleccionados.
- Hicimos un análisis estratográfico básico.  

¡Esperamos que utilizen estos ejemplos como un bloque para usar en el futuro en su trabajo o para algo nuevo y divertido!